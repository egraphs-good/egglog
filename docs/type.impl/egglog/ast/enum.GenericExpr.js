(function() {
    var type_impls = Object.fromEntries([["egglog",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-GenericExpr%3CHead,+Leaf%3E\" class=\"impl\"><a href=\"#impl-Clone-for-GenericExpr%3CHead,+Leaf%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Head, Leaf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;<div class=\"where\">where\n    Head: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Leaf: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","egglog::ast::expr::Expr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-GenericExpr%3CHead,+Leaf%3E\" class=\"impl\"><a href=\"#impl-Debug-for-GenericExpr%3CHead,+Leaf%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Head, Leaf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;<div class=\"where\">where\n    Head: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    Leaf: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","egglog::ast::expr::Expr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-GenericExpr%3CHead,+Leaf%3E\" class=\"impl\"><a href=\"#impl-Display-for-GenericExpr%3CHead,+Leaf%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Head, Leaf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;<div class=\"where\">where\n    Head: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,\n    Leaf: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","egglog::ast::expr::Expr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericExpr%3CHead,+Leaf%3E\" class=\"impl\"><a href=\"#impl-GenericExpr%3CHead,+Leaf%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Head, Leaf&gt; <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;<div class=\"where\">where\n    Head: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,\n    Leaf: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.span\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"egglog/ast/enum.GenericExpr.html#tymethod.span\" class=\"fn\">span</a>(&amp;self) -&gt; <a class=\"enum\" href=\"egglog/ast/enum.Span.html\" title=\"enum egglog::ast::Span\">Span</a></h4></section><section id=\"method.is_var\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"egglog/ast/enum.GenericExpr.html#tymethod.is_var\" class=\"fn\">is_var</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.get_var\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"egglog/ast/enum.GenericExpr.html#tymethod.get_var\" class=\"fn\">get_var</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Leaf&gt;</h4></section><section id=\"method.ast_size\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"egglog/ast/enum.GenericExpr.html#tymethod.ast_size\" class=\"fn\">ast_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.walk\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"egglog/ast/enum.GenericExpr.html#tymethod.walk\" class=\"fn\">walk</a>(\n    &amp;self,\n    pre: &amp;mut impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;<a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;),\n    post: &amp;mut impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;<a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;),\n)</h4></section><section id=\"method.fold\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"egglog/ast/enum.GenericExpr.html#tymethod.fold\" class=\"fn\">fold</a>&lt;Out&gt;(\n    &amp;self,\n    f: &amp;mut impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;<a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Out&gt;) -&gt; Out,\n) -&gt; Out</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_exprs\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"egglog/ast/enum.GenericExpr.html#tymethod.visit_exprs\" class=\"fn\">visit_exprs</a>(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;) -&gt; <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;,\n) -&gt; <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;</h4></section></summary><div class=\"docblock\"><p>Applys <code>f</code> to all sub-expressions (including <code>self</code>)\nbottom-up, collecting the results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subst\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"egglog/ast/enum.GenericExpr.html#tymethod.subst\" class=\"fn\">subst</a>&lt;Head2, Leaf2&gt;(\n    &amp;self,\n    subst_leaf: &amp;mut impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;<a class=\"enum\" href=\"egglog/ast/enum.Span.html\" title=\"enum egglog::ast::Span\">Span</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Leaf</a>) -&gt; <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head2, Leaf2&gt;,\n    subst_head: &amp;mut impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Head</a>) -&gt; Head2,\n) -&gt; <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head2, Leaf2&gt;</h4></section></summary><div class=\"docblock\"><p><code>subst</code> replaces occurrences of variables and head symbols in the expression.</p>\n</div></details><section id=\"method.subst_leaf\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"egglog/ast/enum.GenericExpr.html#tymethod.subst_leaf\" class=\"fn\">subst_leaf</a>&lt;Leaf2&gt;(\n    &amp;self,\n    subst_leaf: &amp;mut impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;<a class=\"enum\" href=\"egglog/ast/enum.Span.html\" title=\"enum egglog::ast::Span\">Span</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Leaf</a>) -&gt; <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf2&gt;,\n) -&gt; <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf2&gt;</h4></section><section id=\"method.vars\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"egglog/ast/enum.GenericExpr.html#tymethod.vars\" class=\"fn\">vars</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Leaf&gt;</h4></section></div></details>",0,"egglog::ast::expr::Expr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-GenericExpr%3CHead,+Leaf%3E\" class=\"impl\"><a href=\"#impl-Hash-for-GenericExpr%3CHead,+Leaf%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Head, Leaf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;<div class=\"where\">where\n    Head: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    Leaf: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.87.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","egglog::ast::expr::Expr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-GenericExpr%3CHead,+Leaf%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-GenericExpr%3CHead,+Leaf%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Head, Leaf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;<div class=\"where\">where\n    Head: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    Leaf: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.87.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","egglog::ast::expr::Expr"],["<section id=\"impl-Eq-for-GenericExpr%3CHead,+Leaf%3E\" class=\"impl\"><a href=\"#impl-Eq-for-GenericExpr%3CHead,+Leaf%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Head, Leaf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;<div class=\"where\">where\n    Head: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    Leaf: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","egglog::ast::expr::Expr"],["<section id=\"impl-StructuralPartialEq-for-GenericExpr%3CHead,+Leaf%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-GenericExpr%3CHead,+Leaf%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Head, Leaf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"egglog/ast/enum.GenericExpr.html\" title=\"enum egglog::ast::GenericExpr\">GenericExpr</a>&lt;Head, Leaf&gt;</h3></section>","StructuralPartialEq","egglog::ast::expr::Expr"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[21464]}