(datatype Scalar
    (Num i64)
    (SVar String)
    (SAdd Scalar Scalar)
    (SMul Scalar Scalar)
    (SSub Scalar Scalar)
    (SDiv Scalar Scalar))

(with-custom-cost
    (datatype Matrix
        (MVar String)
        (Scale Scalar Matrix)
        (MAdd Matrix Matrix)
        (MMul Matrix Matrix)
        ; (Transpose Matrix)
    )
)

(relation MatrixDim (String i64 i64))

(ruleset optimization)
(with-ruleset optimization
    ;; Commutativity
    (rewrite (SAdd x y) (SAdd y x))
    (rewrite (SMul x y) (SMul y x))
    (rewrite (MAdd A B) (MAdd B A))

    ;; Associativity
    (birewrite (SAdd (SAdd x y) z) (SAdd x (SAdd y z)))
    (birewrite (SMul (SMul x y) z) (SMul x (SMul y z)))
    (birewrite (Scale y (Scale x A)) (Scale (SMul x y) A))
    (birewrite (MAdd (MAdd A B) C) (MAdd A (MAdd B C)))
    (birewrite (MMul (MMul A B) C) (MMul A (MMul B C)))

    ;; Distributivity
    (birewrite (SMul x (SAdd y z)) (SAdd (SMul x y) (SMul x z)))
    (birewrite (MMul A (MAdd B C)) (MAdd (MMul A B) (MMul A C)))
    (birewrite (Scale x (MAdd A B)) (MAdd (Scale x A) (Scale x B)))
    (birewrite (Scale (SAdd x y) A) (MAdd (Scale x A) (Scale y A)))

    (rewrite (MMul (Scale a A) B) (Scale a (MMul A B)))
    (rewrite (MMul A (Scale a B)) (Scale a (MMul A B)))


    ;; Identity
    (rewrite (SAdd x (Num 0)) x)
    (rewrite (SMul x (Num 1)) x)
    (rewrite (SMul x (Num 0)) (Num 0))
)

;; Analysis for dimensions of matrices
(function nrows (Matrix) i64 :no-merge)
(function ncols (Matrix) i64 :no-merge)

(ruleset cost-analysis)
(with-ruleset cost-analysis
    (rule ((MatrixDim m i j))
        ((set (nrows (MVar m)) i)
        (set (ncols (MVar m)) j)))

    (rule (
        (= e (Scale x A))
        (= i (nrows A)) (= j (ncols A))
    ) (
        (set (nrows e) i)
        (set (ncols e) j)
    ))
    (rule (
        (= e (MAdd A B))
        (= i (nrows A)) (= j (ncols A))
        (= i (nrows B)) (= j (ncols B))
    ) (
        (set (nrows e) i)
        (set (ncols e) j)
    ))
    (rule (
        (= e (MMul A B))
        (= i (nrows A)) (= k (ncols A))
        (= k (nrows B)) (= j (ncols B))
    ) (
        (set (nrows e) i)
        (set (ncols e) j)
    ))

    (rule ((= e (Scale a A))
        (= n (nrows A))
        (= m (ncols A))
    ) (
        (set-cost (Scale a A) (* n m))
    ))


    (rule ((= e (MAdd A B))
        (= n (nrows A))
        (= m (ncols A))
    ) (
        (set-cost (MAdd A B) (* n m))
    ))

    (rule ((= e (MMul A B))
        (= n (nrows A))
        (= k (ncols A))
        (= m (ncols B))
    ) (
        (set-cost (MMul A B) (* (* n m) k))
    ))
)

