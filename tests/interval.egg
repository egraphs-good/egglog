(datatype Math
  (Num Rational)
  (Var String)
  (Mul Math Math))

(function hi (Math) Rational :merge (min old new))
(function lo (Math) Rational :merge (max old new))

(rule ((= mul (Mul a b))
       (= loa (lo a))
       (= lob (lo b))
       (= hia (hi a))
       (= hib (hi b))
      )
      ((set (lo mul) 
          (min (min (* loa lob) (* loa hib))
               (min (* hia lob) (* hia hib))))))

(let x (Var "x"))
(let e (Mul x x))

(set (lo x) (rational -10 1))
(set (hi x) (rational 10 1))

(run 1)

(check (= (lo e) (rational -100 1)))

(rule ((= mul (Mul a a))
       (= loa (lo a))
      )
      ((set (lo mul) (* loa loa))))

(run 1)
(check (= (lo e) (rational 100 1)))

;; testing extraction of rationals
(query-extract (lo e))
